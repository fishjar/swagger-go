swagger: '2.0'
info:
  version: 0.0.1
  title: Hello World App
  description: app description
host: 'localhost:3000'
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
    description: test description
  JWT:
    description: 'Authorization: Bearer {token}'
    type: apiKey
    name: Authorization
    in: header
security:
  - APIKeyHeader: []
    JWT: []
paths:
  /account/login:
    post:
      summary: 登录
      description: 登录...
      security: []
      parameters:
        - in: body
          name: body
          description: 登录参数
          required: true
          schema:
            $ref: '#/definitions/LoginBody'
      responses:
        '200':
          description: 登录成功
          schema:
            $ref: '#/definitions/LoginResponse'
  /account/user:
    get:
      summary: 查询当前用户
      description: 查询当前用户..
      responses:
        '200':
          description: 查询成功
          headers:
            authtoken:
              type: string
              description: 新token续期
          schema:
            $ref: '#/definitions/UserDemo'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
definitions:
  Foo:
    type: object
    x-isModel: true
    x-plural: Foos
    x-tableName: foo
    x-apis:
      - findOne
      - findOrCreate
      - singleCreate
    description: 测试模型
    required:
      - id
      - name
      - goodTime
      - isGood
      - status
    properties:
      id:
        type: string
        format: uuid
        description: ID
        uniqueItems: true
        x-primaryKey: true
        x-fieldName: id
      user:
        x-fieldName: user
        x-refFieldKey: id
        x-description: 引用用户ID
        $ref: '#/definitions/UserDemo'
      userId:
        type: string
        format: string
        description: 引用用户ID
        x-fieldName: user_id
        x-foreignKey: true
        x-refFieldKey: id
        x-ref: '#/definitions/UserDemo'
      name:
        type: string
        format: string
        description: 名称
        uniqueItems: true
        minLength: 3
        maxLength: 20
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
        x-length: 20
        x-fieldName: name
      age:
        type: integer
        format: int4
        description: 年龄
        minimum: 0
        maximum: 100
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
        x-fieldName: age
      weight:
        type: number
        format: float
        description: '体重（单位:kg）'
        minimum: 0.01
        maximum: 200
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
        x-fieldName: weight
      birthday:
        type: string
        format: date
        description: 生日
        x-message: 请选择
        x-showTable: true
        x-showSorter: true
        x-fieldName: birthday
      goodTime:
        type: string
        format: date-time
        description: 快乐时光
        x-message: 请选择
        x-showTable: true
        x-showSorter: true
        x-fieldName: good_time
      email:
        type: string
        format: email
        description: 邮箱
        uniqueItems: true
        x-message: 请输入
        x-showTable: true
        x-showFilter: true
        x-fieldName: email
      homepage:
        type: string
        format: uri
        description: 主页
        x-message: 请输入
        x-fieldName: homepage
      notice:
        type: string
        format: text
        description: 备注
        x-message: 请输入
        x-fieldName: notice
      intro:
        type: string
        format: text
        description: 介绍
        x-message: 请输入
        x-isRichText: true
        x-fieldName: intro
      isGood:
        type: boolean
        format: boolean
        description: 是否安好
        default: true
        x-message: 请选择
        x-showTable: true
        x-showFilter: true
        x-fieldName: is_good
      myExtra:
        type: object
        format: object
        description: 扩展字段1
        x-message: 请输入
        x-fieldName: my_extra
        properties:
          id:
            type: integer
            description: ID
          username:
            type: string
            description: 用户名
      myExtraArray:
        type: array
        format: array
        description: 扩展字段2
        x-fieldName: my_extra_array
        items:
          $ref: '#/definitions/UserDemo'
      tages:
        type: array
        format: array
        description: 标签
        x-fieldName: tages
        items:
          type: string
      status:
        type: integer
        format: int4
        enum:
          - 1
          - 2
          - 3
        default: 1
        x-message: 请选择
        x-showTable: true
        x-showFilter: true
        x-fieldName: status
        x-enumMap:
          '1': 正常
          '2': 异常
          '3': 禁用
        x-description: 状态
        description: |
          "状态"
            * 1 - 正常
            * 2 - 异常
            * 3 - 禁用
    example:
      id: '123'
      age: 12
      name: foo
      birthday: '2012-12-12'
      goodTime: '2012-12-12 12:12:12'
      email: test@test.com
      notice: 备注
      isGood: true
      status: 1
  UserDemo:
    type: object
    description: 用户模型
    required:
      - id
      - name
    properties:
      id:
        type: integer
        description: ID
      name:
        type: string
        description: 用户名
      avatar:
        type: string
        description: 头像
      email:
        type: string
        description: 邮箱
    example:
      name: Admin
      avatar: 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'
      id: '00000001'
      email: test@test.com
  LoginBody:
    type: object
    description: 登录参数模型
    required:
      - userName
      - password
      - type
    properties:
      userName:
        type: string
        description: 用户名
      password:
        type: string
        description: 密码
      type:
        type: string
        description: 账户类型
    example:
      userName: admin
      password: '123456'
      type: username
  LoginResponse:
    type: object
    description: 登录返回数据模型
    required:
      - status
      - type
      - currentAuthority
      - authtoken
    properties:
      status:
        type: string
        description: 登录状态
      type:
        type: string
        description: 账号类型
      currentAuthority:
        type: string
        description: 当前角色
      authtoken:
        type: string
        description: 秘钥
  Error:
    type: object
    properties:
      message:
        type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorItem'
    required:
      - message
  ErrorItem:
    type: object
    properties:
      errcode:
        type: integer
      errmsg:
        type: string
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
